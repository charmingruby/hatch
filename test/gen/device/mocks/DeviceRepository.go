// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	model "github/charmingruby/gew/internal/device/model"

	mock "github.com/stretchr/testify/mock"
)

// DeviceRepository is an autogenerated mock type for the DeviceRepository type
type DeviceRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: device
func (_m *DeviceRepository) Create(device model.Device) error {
	ret := _m.Called(device)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(model.Device) error); ok {
		r0 = rf(device)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewDeviceRepository creates a new instance of DeviceRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDeviceRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *DeviceRepository {
	mock := &DeviceRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
