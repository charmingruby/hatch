// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	message "github/charmingruby/habits/internal/device/delivery/queue/message"

	mock "github.com/stretchr/testify/mock"
)

// ApplicationQueue is an autogenerated mock type for the ApplicationQueue type
type ApplicationQueue struct {
	mock.Mock
}

// DispatchDeviceCreated provides a mock function with given fields: msg
func (_m *ApplicationQueue) DispatchDeviceCreated(msg message.DispatchDeviceCreatedMessage) error {
	ret := _m.Called(msg)

	if len(ret) == 0 {
		panic("no return value specified for DispatchDeviceCreated")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(message.DispatchDeviceCreatedMessage) error); ok {
		r0 = rf(msg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewApplicationQueue creates a new instance of ApplicationQueue. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewApplicationQueue(t interface {
	mock.TestingT
	Cleanup(func())
}) *ApplicationQueue {
	mock := &ApplicationQueue{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
